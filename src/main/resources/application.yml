server:
  port: 8081
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  datasource:
    driver-class-name: oracle.jdbc.driver.OracleDriver
    url: jdbc:oracle:thin:@localhost:1521/xe
    username: security
    password: tiger

  devtools:
    restart:
      enabled: true

  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100

  security:
    oauth2:
      client:
        registration:
          google: # /oauth2/authorization/google 이 주소를 동작하게 한다.
            client-id: 487664062068-ah6vdrfqah90hhn2edi1keim9q2eaf18.apps.googleusercontent.com
            client-secret: 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
            scope:
              - email
              - profile
          naver:
            client-id: CUDiAoR3gtFbna1ijmAK
            client-secret: KyLxDtE6to
            scope:
              - name
              - email
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8081/login/oauth2/code/naver

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize # 네이버 로그인 창을 띄워주는 주소
            token-uri: https://nid.naver.com/oauth2.0/token # 토큰을 받기 위한 주소
            user-info-uri: https://openapi.naver.com/v1/nid/me #프로필 정보를 받기 위한 주소
            user-name-attribute: response #회원정보를 json으로 받는데 response라는 키값으로 네이버가 리턴함.



logging:
  level:
    org.hibernate.SQL: debug
    #org.hibernate.type: trace

